Parameters:
  
  Image:
    Type: String
    Description: The docker image to use for the pipelines service

  GithubToken:
    Type: String
    NoEcho: true
    Description: OAuth token for the Cythral GitHub account
  
  GithubSigningSecret:
    Type: String
    NoEcho: true
    Description: Secret used to sign incoming requests from GitHub.

Resources:
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - !ImportValue pipelines-security:PipelineKeyDecryptPolicyArn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ecs-tasks.amazonaws.com
  
  LogPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref TaskRole
      PolicyName: !Sub ${AWS::StackName}LogPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutRetentionPolicy
            Resource: arn:aws:logs:*:*:*

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref AWS::StackName

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Split
            - ","
            - !ImportValue pipelines-networking:SubnetIds
          SecurityGroups:
            - !ImportValue pipelines-networking:PrimarySecurityGroupName
          AssignPublicIp: ENABLED
      LoadBalancers:
        - ContainerName: webhook
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      DeploymentConfiguration:
        MinimumHealthyPercent: 1
        MaximumPercent: 200


  HttpListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Priority: 1
      ListenerArn: !ImportValue pipelines-networking:Port80ListenerArn
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: host-header
          Values: 
            - brigh.id
        - Field: path-pattern
          Values:
            - /webhook

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      VpcId: !ImportValue pipelines-networking:VpcId
      HealthCheckPath: /healthcheck
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      Protocol: HTTP
      Port: 80

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: webhook
          Essential: true
          Image: !Ref Image
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: us-east-1
              awslogs-stream-prefix: !Ref AWS::StackName
          Environment:
            - Name: ENCRYPTED_GITHUB_TOKEN
              Value: !Ref GithubToken
            - Name: ENCRYPTED_GITHUB_SIGNING_SECRET
              Value: !Ref GithubSigningSecret
